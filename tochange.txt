## Key Generation ##

1. [X] Move the Encryption Algorithm from LockBox_Main to \pyth\keygen.py

2. [] Change encryption key generation
    - Use 3 random images out of x number of images
    - Take 3 pixels from each image
    - Average out RGB of image pixels
    - Then average out those averages
    - Mutiply first two, add the second

3. [] Change FinalList()
    - Make it so that included images are used to convert the FinalList of numbers into a mixture of letters, numbers, and special characters. 
    - Numbers --> Letters & Characters based on certain random positions inside of specefied images

4. [] Create Key Storage & Get Methods
    - Create a set num of images, all with randomized RGB values for every pixel
    - Each image is (500x500) pixels, * 5 images = 1,250,000 pixels in total
    - One pixel in the image has RGB pixels that will translate to the encryption key
    - Said pixel can be manually entered, or saved somewhere else

5. [] Compile (most) LockBox files into one
    - For security reasons, LockBox will be an 'all-inclusive' code segment that is placed at the very top of any code project.
    - Here's how that would work form a single-file perspective
        0. The file is edited with a pre-set 'decryption key' inside of it.
        1. Main python file is turned into an .exe
        2. Then, using that key, the file 'man.key' is opened and decrypted using the decryption key
        3. The now decrypted key is used